library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
mydf = read.csv(path2csv, stringsAsFactors = FALSE)
mydf <- read.csv(path2csv, stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm(mydf)
rm("mydf")
cran
?select
selecr(cran, ip_id, package, country)
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
-5:20
-(5:20)
select(cran, -(X:size))
filter(cran, package == "swirl")
filter(cran, r_version == "3.1.1", "country" == "US")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "IN" | country == "US")
filter( cran, size > 100500, r_os == "linux-gnu")
is.na(c(3, 5, NA, 10))
!is.na(c(3, 5, NA, 10))
filter(cran, !is.na(R.version))
filter(cran, !is.na(r_version))
cran2 <- select(cran, size:ip_id)
arrange(cran2, id_ip)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^10)
mutate(cran3, correct_size = size + 1000)
summarise(cran, avg_bytes = mean(size))
summarize(cran, avg_bytes = mean(size))
getwd()
setwd("C:\\Users\\ACER\\Documents\\projetos\\Johns Hopkins - Data Science Specialization\\Curso 03 - Getting and Cleaning Data\\Week04\\Final Project")
getwd()
featnames <- read.csv(".\UCI HAR Dataset\features.txt")
featnames <- read.csv(".\UCI HAR Dataset\features.txt")
featnames <- read.csv(".\UCI HAR Dataset\features.txt")
featnames <- read.csv(".\UCI HAR Dataset\features.txt")
featnames <- read.csv("./UCI HAR Dataset/features.txt")
featnames
featnames <- read.csv("./UCI HAR Dataset/features.txt", header = FALSE)
HEAD
head(featnames)
str(featnames)
class(str(featnames))
featnames <- read.csv("./UCI HAR Dataset/features.txt", header = FALSE, sep = " ")
head(featnames)
as.vector(featnames$V2)
featnames <- as.vector(featnames$V2)
featnames <- read.csv("./UCI HAR Dataset/features.txt", header = FALSE, sep = " ")
class(featnames)
class(as.vector(featnames$V2))
class(as.character(featnames))
head(as.vector(featnames$V2))
head(as.character(featnames))
head(as.character(featnames[,2]))
subject_train <- read.csv("./UCI HAR Dataset/subject_train.txt")
subject_train <- read.csv("./UCI HAR Dataset/train/subject_train.txt")
head(subject_train)
subject_train <- read.csv("./UCI HAR Dataset/train/subject_train.txt", header = FALSE)
head(subject_train)
X_train <- read.csv("./UCI HAR Dataset/train/X_train.txt")
head(X_train)
X_train <- read.csv("./UCI HAR Dataset/train/X_train.txt")
X_train <- read.csv("./UCI HAR Dataset/train/X_train.txt", header = FALSE, sep = " ")
head(X_train)
X_train <- read.csv("./UCI HAR Dataset/train/X_train.txt", header = FALSE, sep = " ")
head(X_train)
X_train <- read.table("./UCI HAR Dataset/train/X_train.txt")
class(X_train)
X_train <- read.csv("./UCI HAR Dataset/train/X_train.txt", header = FALSE, sep = " ")
class(X_train)
dim(X_train)
X_train <- read.table("./UCI HAR Dataset/train/X_train.txt")
dim(X_train)
X_train <- read.table("./UCI HAR Dataset/train/X_train.txt", sep = " ")
X_train <- read.csv("./UCI HAR Dataset/train/X_train.txt", header = FALSE)
dim(X_train)
X_train <- read.csv("./UCI HAR Dataset/train/X_train.txt", header = FALSE, sep = " ")
dim(X_train)
X_train <- read.table("./UCI HAR Dataset/train/X_train.txt")
dim(X_train)
dim(read.table("./UCI HAR Dataset/train/subject_train.txt"))
dim(subject_train)
dim( read.csv("./UCI HAR Dataset/features.txt", header = FALSE, sep = " "))
dim( read.table("./UCI HAR Dataset/features.txt"))
read.table("./UCI HAR Dataset/features.txt") %>% as.factor(V2)
library(magrittr)
read.table("./UCI HAR Dataset/features.txt") %>% as.factor(V2)
read.table("./UCI HAR Dataset/features.txt") %>% as.factor([,2)
read.table("./UCI HAR Dataset/features.txt") %>% as.factor([,2])
read.table("./UCI HAR Dataset/features.txt") %>% as.factor()
read.table("./UCI HAR Dataset/features.txt") %>% as.factor($V2)
read.table("./UCI HAR Dataset/features.txt") %>% colnames()
featnames <- read.table("./UCI HAR Dataset/features.txt")
featnames <- as.vector(featnames$V2)
subject_train <- read.table("./UCI HAR Dataset/train/subject_train.txt")
X_train <- read.table("./UCI HAR Dataset/train/X_train.txt")
y_train <- read.table("./UCI HAR Dataset/train/y_train.txt")
subject_test <- read.table("./UCI HAR Dataset/test/subject_test.txt")
X_test <- read.table("./UCI HAR Dataset/test/X_test.txt")
y_test <- read.table("./UCI HAR Dataset/test/y_test.txt")
colnames(X_test)
rbind()
train_df <- cbind(subject_train, X_train, y_train)
test_df <- cbind(subject_test, X_test, y_test)
df <- rbind(train_df, test_df)
library(dplyr)
features <- read.table("UCI HAR Dataset/features.txt", col.names = c("n","functions"))
activities <- read.table("UCI HAR Dataset/activity_labels.txt", col.names = c("code", "activity"))
subject_test <- read.table("UCI HAR Dataset/test/subject_test.txt", col.names = "subject")
x_test <- read.table("UCI HAR Dataset/test/X_test.txt", col.names = features$functions)
y_test <- read.table("UCI HAR Dataset/test/y_test.txt", col.names = "code")
subject_train <- read.table("UCI HAR Dataset/train/subject_train.txt", col.names = "subject")
x_train <- read.table("UCI HAR Dataset/train/X_train.txt", col.names = features$functions)
y_train <- read.table("UCI HAR Dataset/train/y_train.txt", col.names = "code")
X <- rbind(x_train, x_test)
Y <- rbind(y_train, y_test)
Subject <- rbind(subject_train, subject_test)
Merged_Data <- cbind(Subject, Y, X)
TidyData <- Merged_Data %>% select(subject, code, contains("mean"), contains("std"))
View(Merged_Data)
library(dplyr)
featnames <- read.table("./UCI HAR Dataset/features.txt")
featnames <- as.vector(featnames$V2)
subject_train <- read.table("./UCI HAR Dataset/train/subject_train.txt")
X_train <- read.table("./UCI HAR Dataset/train/X_train.txt")
y_train <- read.table("./UCI HAR Dataset/train/y_train.txt")
subject_test <- read.table("./UCI HAR Dataset/test/subject_test.txt")
X_test <- read.table("./UCI HAR Dataset/test/X_test.txt")
y_test <- read.table("./UCI HAR Dataset/test/y_test.txt")
train_df <- cbind(subject_train, X_train, y_train)
test_df <- cbind(subject_test, X_test, y_test)
df <- rbind(train_df, test_df)
View(df)
features <- read.table("UCI HAR Dataset/features.txt", col.names = c("n","functions"))
activities <- read.table("UCI HAR Dataset/activity_labels.txt", col.names = c("code", "activity"))
subject_test <- read.table("UCI HAR Dataset/test/subject_test.txt", col.names = "subject")
x_test <- read.table("UCI HAR Dataset/test/X_test.txt", col.names = features$functions)
y_test <- read.table("UCI HAR Dataset/test/y_test.txt", col.names = "code")
subject_train <- read.table("UCI HAR Dataset/train/subject_train.txt", col.names = "subject")
x_train <- read.table("UCI HAR Dataset/train/X_train.txt", col.names = features$functions)
y_train <- read.table("UCI HAR Dataset/train/y_train.txt", col.names = "code")
features <- read.table("UCI HAR Dataset/features.txt", col.names = c("n","functions"))
activities <- read.table("UCI HAR Dataset/activity_labels.txt", col.names = c("code", "activity"))
subject_test <- read.table("UCI HAR Dataset/test/subject_test.txt", col.names = "subject")
x_test <- read.table("UCI HAR Dataset/test/X_test.txt", col.names = features$functions)
y_test <- read.table("UCI HAR Dataset/test/y_test.txt", col.names = "code")
subject_train <- read.table("UCI HAR Dataset/train/subject_train.txt", col.names = "subject")
x_train <- read.table("UCI HAR Dataset/train/X_train.txt", col.names = features$functions)
y_train <- read.table("UCI HAR Dataset/train/y_train.txt", col.names = "code")
X <- rbind(x_train, x_test)
Y <- rbind(y_train, y_test)
Subject <- rbind(subject_train, subject_test)
Merged_Data <- cbind(Subject, Y, X)
View(Merged_Data)
features <- read.table("UCI HAR Dataset/features.txt", col.names = c("n","functions"))
activities <- read.table("UCI HAR Dataset/activity_labels.txt", col.names = c("code", "activity"))
subject_test <- read.table("UCI HAR Dataset/test/subject_test.txt", col.names = "subject")
x_test <- read.table("UCI HAR Dataset/test/X_test.txt", col.names = features$functions)
y_test <- read.table("UCI HAR Dataset/test/y_test.txt", col.names = "code")
subject_train <- read.table("UCI HAR Dataset/train/subject_train.txt", col.names = "subject")
x_train <- read.table("UCI HAR Dataset/train/X_train.txt", col.names = features$functions)
y_train <- read.table("UCI HAR Dataset/train/y_train.txt", col.names = "code")
colnames(subject_train)
dim(subject_train )
library(dplyr)
featnames <- read.table("./UCI HAR Dataset/features.txt")
featnames <- as.vector(featnames$V2)
subject_train <- read.table("./UCI HAR Dataset/train/subject_train.txt", col.names = "subject")
X_train <- read.table("./UCI HAR Dataset/train/X_train.txt", col.names = featnames)
y_train <- read.table("./UCI HAR Dataset/train/y_train.txt", col.names = "Y")
subject_test <- read.table("./UCI HAR Dataset/test/subject_test.txt", col.names = "subject")
X_test <- read.table("./UCI HAR Dataset/test/X_test.txt", col.names = featnames)
y_test <- read.table("./UCI HAR Dataset/test/y_test.txt", col.names = "Y")
train_df <- cbind(subject_train, y_train, X_train)
test_df <- cbind(subject_test, y_test, X_test)
df <- rbind(train_df, test_df)
View(df)
?select
mean_std_df <- select(df, subject, Y, contains("mean"), contains("std"))
View(mean_std_df)
activity_labels <- read.table("./UCI HAR Dataset/activity_labels.txt") %>% as.vector(select(V2))
activity_labels <- read.table("./UCI HAR Dataset/activity_labels.txt")
View(activity_labels)
teste <- merge.default(mean_std_df$Y, activity_labels$V1)
View(teste)
teste <- inner_join(mean_std_df, activity_labels, by = c("Y", "V1"))
activity_labels <- read.table("./UCI HAR Dataset/activity_labels.txt", col.names = c("Y", "Description"))
View(activity_labels)
teste <- inner_join(mean_std_df, activity_labels, by = c("Y", "Y"))
teste <- inner_join(mean_std_df, activity_labels, by = c("Y" = "Y"))
View(teste)
mean_std_df$Y <- inner_join(mean_std_df, activity_labels, by = c("Y" = "Y"))[, "Description"]
View(mean_std_df)
names(mean_std_df$Y) <- "Activity"
names(mean_std_df) <- make.names(names(mean_std_df))
names(mean_std_df) <- gsub('Acc',"Acceleration",names(mean_std_df))
names(mean_std_df) <- gsub('GyroJerk',"AngularAcceleration",names(mean_std_df))
names(mean_std_df) <- gsub('Gyro',"AngularSpeed",names(mean_std_df))
names(mean_std_df) <- gsub('Mag',"Magnitude",names(mean_std_df))
names(mean_std_df) <- gsub('^t',"TimeDomain.",names(mean_std_df))
names(mean_std_df) <- gsub('^f',"FrequencyDomain.",names(mean_std_df))
names(mean_std_df) <- gsub('\\.mean',".Mean",names(mean_std_df))
names(mean_std_df) <- gsub('\\.std',".StandardDeviation",names(mean_std_df))
names(mean_std_df) <- gsub('Freq\\.',"Frequency.",names(mean_std_df))
names(mean_std_df) <- gsub('Freq$',"Frequency",names(mean_std_df))
View(mean_std_df)
names(mean_std_df$Y) <- "Activity"
View(mean_std_df)
names(mean_std_df$Y)
names(mean_std_df)
names(mean_std_df[2])
names(mean_std_df[2]) <- "Activity"
View(mean_std_df)
names(mean_std_df)[2] <- "Activity"
names(mean_std_df) <- make.names(names(mean_std_df))
names(mean_std_df) <- gsub('Acc',"Acceleration",names(mean_std_df))
names(mean_std_df) <- gsub('GyroJerk',"AngularAcceleration",names(mean_std_df))
names(mean_std_df) <- gsub('Gyro',"AngularSpeed",names(mean_std_df))
names(mean_std_df) <- gsub('Mag',"Magnitude",names(mean_std_df))
names(mean_std_df) <- gsub('^t',"TimeDomain.",names(mean_std_df))
names(mean_std_df) <- gsub('^f',"FrequencyDomain.",names(mean_std_df))
names(mean_std_df) <- gsub('\\.mean',".Mean",names(mean_std_df))
names(mean_std_df) <- gsub('\\.std',".StandardDeviation",names(mean_std_df))
names(mean_std_df) <- gsub('Freq\\.',"Frequency.",names(mean_std_df))
names(mean_std_df) <- gsub('Freq$',"Frequency",names(mean_std_df))
View(mean_std_df)
final_df <- group_by(mean_std_df, subject, Activity)
summarise(final_df)
View(mean_std_df)
summarise(final_df, mean())
names(final_df)
summarise(final_df, mean(angle.X.gravityMean.))
?name <- function(variables) {
}
?funs
summarise(final_df, mean())
summarise(final_df, mean
summarise(final_df, mean)
summarise(final_df, mean)
summarise(final_df, funs(mean)
summarise(final_df, funs(mean))
summarise(final_df, funs(mean))
summarise(final_df, mean(names(final_df[,3:88])))
summarise_all(final_df, funs(mean))
summarise_all(final_df, list(mean))
final_df <- group_by(mean_std_df, subject, Activity) %>%
summarise_all(list(mean))
View(final_df)
library(dplyr)
featnames <- read.table("./UCI HAR Dataset/features.txt")
featnames <- as.vector(featnames$V2)
subject_train <- read.table("./UCI HAR Dataset/train/subject_train.txt", col.names = "subject")
X_train <- read.table("./UCI HAR Dataset/train/X_train.txt", col.names = featnames)
y_train <- read.table("./UCI HAR Dataset/train/y_train.txt", col.names = "Y")
subject_test <- read.table("./UCI HAR Dataset/test/subject_test.txt", col.names = "subject")
X_test <- read.table("./UCI HAR Dataset/test/X_test.txt", col.names = featnames)
y_test <- read.table("./UCI HAR Dataset/test/y_test.txt", col.names = "Y")
#1. Merges the training and the test sets to create one data set
train_df <- cbind(subject_train, y_train, X_train)
test_df <- cbind(subject_test, y_test, X_test)
df <- rbind(train_df, test_df)
#2. Extracts only the measurements on the mean and standard deviation for each measurement.
mean_std_df <- select(df, subject, Y, contains("mean"), contains("std"))
#3. Uses descriptive activity names to name the activities in the data set
activity_labels <- read.table("./UCI HAR Dataset/activity_labels.txt", col.names = c("Y", "Description"))
mean_std_df$Y <- inner_join(mean_std_df, activity_labels, by = c("Y" = "Y"))[, "Description"]
names(mean_std_df)[2] <- "Activity"
#4. Appropriately label the data set with descriptive activity names
names(mean_std_df) <- make.names(names(mean_std_df))
names(mean_std_df) <- gsub('Acc',"Acceleration",names(mean_std_df))
names(mean_std_df) <- gsub('GyroJerk',"AngularAcceleration",names(mean_std_df))
names(mean_std_df) <- gsub('Gyro',"AngularSpeed",names(mean_std_df))
names(mean_std_df) <- gsub('Mag',"Magnitude",names(mean_std_df))
names(mean_std_df) <- gsub('^t',"TimeDomain.",names(mean_std_df))
names(mean_std_df) <- gsub('^f',"FrequencyDomain.",names(mean_std_df))
names(mean_std_df) <- gsub('\\.mean',".Mean",names(mean_std_df))
names(mean_std_df) <- gsub('\\.std',".StandardDeviation",names(mean_std_df))
names(mean_std_df) <- gsub('Freq\\.',"Frequency.",names(mean_std_df))
names(mean_std_df) <- gsub('Freq$',"Frequency",names(mean_std_df))
#5. From the data set in step 4, creates a second, independent tidy data set with the average of each variable for each activity and each subject
final_df <- group_by(mean_std_df, subject, Activity) %>%
summarise_all(list(mean)) %>%
write.table(final_df, "Final_df.txt")
final_df <- group_by(mean_std_df, subject, Activity) %>%
summarise_all(list(mean))
write.table(final_df, "Final_df.txt")
write.table(final_df, "Final_df.txt", row.name=FALSE)
